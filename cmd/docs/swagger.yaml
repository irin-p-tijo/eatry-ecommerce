basePath: /
definitions:
  domain.Category:
    properties:
      category:
        type: string
      id:
        type: integer
    type: object
  domain.PaymentMethod:
    properties:
      id:
        type: integer
      payment_name:
        type: string
    type: object
  models.AddAddress:
    properties:
      city:
        type: string
      district:
        type: string
      house_name:
        type: string
      name:
        type: string
      pin:
        type: string
      state:
        type: string
      street:
        type: string
      user_id:
        type: integer
    required:
    - city
    - district
    - house_name
    - name
    - pin
    - state
    - street
    - user_id
    type: object
  models.AddCoupon:
    properties:
      coupon:
        type: string
      discount_percentage:
        type: integer
      minimum_price:
        type: number
      validity:
        type: boolean
    required:
    - coupon
    - discount_percentage
    - minimum_price
    - validity
    type: object
  models.AddProduct:
    properties:
      category_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      stock:
        type: integer
    type: object
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.UserDetails:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - confirm_password
    - email
    - name
    - password
    - phone
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the API documentation for Eatry - E-commerce application.
  title: Eatry - E-commerce API
  version: "1.0"
paths:
  /admin/block:
    post:
      consumes:
      - application/json
      description: Blocks a user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Block user
      tags:
      - Admin
  /admin/dashboard:
    get:
      consumes:
      - application/json
      description: Retrieves the admin dashboard
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get admin dashboard
      tags:
      - Admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: Logs in as an admin
      parameters:
      - description: Admin login details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login as admin
      tags:
      - Admin
  /admin/sales-report-by-date:
    get:
      consumes:
      - application/json
      description: Retrieves the sales report for a specific date range
      parameters:
      - description: Start date
        in: query
        name: start
        required: true
        type: string
      - description: End date
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get sales report by date
      tags:
      - Admin
  /admin/unblock:
    post:
      consumes:
      - application/json
      description: Unblocks a user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Unblock user
      tags:
      - Admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Number of users per page
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get users
      tags:
      - Admin
  /cart:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all products in a user's shopping cart
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all items in a user's cart
      tags:
      - cart
  /cart/add:
    post:
      consumes:
      - application/json
      description: Adds a product to a user's shopping cart
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a product to cart
      tags:
      - cart
  /cart/remove:
    delete:
      consumes:
      - application/json
      description: Removes a product from a user's shopping cart
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Remove a product from cart
      tags:
      - cart
  /categories:
    get:
      consumes:
      - application/json
      description: Retrieves a list of categories based on pagination parameters
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Number of items per page
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all categories
      tags:
      - category
  /category:
    post:
      consumes:
      - application/json
      description: Creates a new category in the system
      parameters:
      - description: Category Details
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a new category
      tags:
      - category
  /category/:id:
    delete:
      consumes:
      - application/json
      description: Deletes a category from the system by its ID
      parameters:
      - description: Category ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a category
      tags:
      - category
  /coupon:
    post:
      consumes:
      - application/json
      description: Creates a new coupon in the system
      parameters:
      - description: Coupon Details
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/models.AddCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new coupon
      tags:
      - coupon
  /coupon/invalid/:id:
    put:
      consumes:
      - application/json
      description: Makes a specific coupon invalid by its ID
      parameters:
      - description: Coupon ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Make a coupon invalid
      tags:
      - coupon
  /coupons:
    get:
      consumes:
      - application/json
      description: Retrieves all coupons available in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all coupons
      tags:
      - coupon
  /order/approve:
    put:
      consumes:
      - application/json
      description: Approves an order placed by a user
      parameters:
      - description: Order ID
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Approve an order by Admin
      tags:
      - order (admin)
  /order/cancel:
    delete:
      consumes:
      - application/json
      description: Cancels an order for a user
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Order ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Cancel an order
      tags:
      - order
  /order/details:
    get:
      consumes:
      - application/json
      description: Retrieves a user's order details based on pagination parameters
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Number of items per page
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get order details for a user
      tags:
      - order
  /order/invoice:
    get:
      responses: {}
  /orders:
    get:
      consumes:
      - application/json
      description: Retrieves all order details for Admin with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all order details for Admin
      tags:
      - order (admin)
  /payment:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all payment methods associated with a user
        account
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Number of items per page
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all payment methods for a user
      tags:
      - payment
  /payment/:id:
    delete:
      consumes:
      - application/json
      description: Deletes a payment method by its ID
      parameters:
      - description: Payment Method ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a payment method
      tags:
      - payment
  /payment/add:
    post:
      consumes:
      - application/json
      description: Creates a new payment method for a user
      parameters:
      - description: Payment Method Details
        in: body
        name: paymentmethod
        required: true
        schema:
          $ref: '#/definitions/domain.PaymentMethod'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a new payment method
      tags:
      - payment
  /payment/razor:
    get:
      description: Creates an order and generates a Razorpay ID for payment processing
      parameters:
      - description: Order ID
        in: query
        name: id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: payment details loaded on ui
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Initiate a Razorpay payment
      tags:
      - payment
  /product:
    post:
      consumes:
      - application/json
      description: Creates a new product in the system
      parameters:
      - description: Product Details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.AddProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a new product
      tags:
      - product
  /product/:id:
    delete:
      consumes:
      - application/json
      description: Deletes a product from the system by its ID
      parameters:
      - description: Product ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a product
      tags:
      - product
    put:
      responses: {}
  /product/filter:
    post:
      consumes:
      - application/json
      description: Filters products based on the provided category information in
        JSON format
      parameters:
      - description: Category information
        in: body
        name: data
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Filter products by category
      tags:
      - product
  /products:
    get:
      responses: {}
  /user/address:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all addresses for a specific user
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all addresses for a user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Creates a new address for a specific user
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Address Details
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.AddAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a new address for a user
      tags:
      - user
  /user/address/:id:
    delete:
      consumes:
      - application/json
      description: Deletes a specific address for a user
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Address ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete an address for a user
      tags:
      - user
  /user/checkout:
    get:
      consumes:
      - application/json
      description: Retrieves the checkout details, including address and order items,
        for a user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Checkout details for a user
      tags:
      - user
  /user/profile:
    get:
      consumes:
      - application/json
      description: Retrieves the profile information for a specific user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get user profile details
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: Log in a user
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: User login
      tags:
      - users
  /users/signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: User sign up
      tags:
      - users
  /wallet:
    get:
      consumes:
      - application/json
      description: Retrieves a user's wallet information
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a user's wallet details
      tags:
      - wallet
  /wallet/history:
    get:
      consumes:
      - application/json
      description: Retrieves the transaction history for a user's wallet
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a user's wallet transaction history
      tags:
      - wallet
swagger: "2.0"
