// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"eatry/pkg/api"
	"eatry/pkg/api/handlers"
	"eatry/pkg/config"
	"eatry/pkg/db"
	"eatry/pkg/repository"
	"eatry/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*api.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	adminRepository := repository.NewAdminRepository(gormDB)
	adminUseCase := usecase.NewAdminUseCase(adminRepository)
	adminHandler := handlers.NewAdminHandler(adminUseCase)
	userRepository := repository.NewUserRepository(gormDB)
	cartRepository := repository.NewCartRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository, cartRepository)
	userHandler := handlers.NewUserHandler(userUseCase)
	categoryRepository := repository.NewCategoryRepository(gormDB)
	categoryUseCase := usecase.NewCategoryUseCase(categoryRepository)
	categoryHandler := handlers.NewCategoryHandler(categoryUseCase)
	productRepository := repository.NewProductRepository(gormDB)
	productUseCase := usecase.NewProductUseCase(productRepository)
	productHandler := handlers.NewProductHandler(productUseCase)
	cartUseCase := usecase.NewCartUseCase(cartRepository, productRepository)
	cartHandler := handlers.NewCartHandler(cartUseCase)
	couponRepository := repository.NewCouponRepository(gormDB)
	couponUseCase := usecase.NewCouponUseCase(couponRepository, cartRepository)
	couponHandler := handlers.NewCouponHandler(couponUseCase)
	orderRepository := repository.NewOrderRepository(gormDB)
	walletRepository := repository.NewWalletRepository(gormDB)
	orderUseCase := usecase.NewOrderUseCase(orderRepository, userRepository, cartRepository, walletRepository)
	orderHandler := handlers.NewOrderHandler(orderUseCase)
	paymentRepository := repository.NewPaymentRepository(gormDB)
	paymentUseCase := usecase.NewPaymentUseCase(paymentRepository, orderRepository)
	paymentHandler := handlers.NewPaymentHandler(paymentUseCase)
	wishlistRepository := repository.NewWishlistRepository(gormDB)
	wishlistUseCase := usecase.NewWishlistUseCase(wishlistRepository)
	wishlistHandler := handlers.NewWishlistHandler(wishlistUseCase)
	walletUseCase := usecase.NewWalletUseCase(walletRepository)
	walletHandler := handlers.NewWalletHandler(walletUseCase)
	serverHTTP := api.NewServerHTTP(adminHandler, userHandler, categoryHandler, productHandler, cartHandler, couponHandler, orderHandler, paymentHandler, wishlistHandler, walletHandler)
	return serverHTTP, nil
}
